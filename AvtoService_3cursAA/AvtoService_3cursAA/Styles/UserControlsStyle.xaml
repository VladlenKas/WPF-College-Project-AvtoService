<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <!--#region Button -->
    <Style TargetType="{x:Type Button}" x:Key="NextButton">
        <Setter Property="Effect" Value="{StaticResource dropShadow}"/>
        <Setter Property="Background" Value="{StaticResource AuthGradientNone}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Ellipse 
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Height="50" 
                        Width="50" 
                        Fill="{TemplateBinding Background}"
                        SnapsToDevicePixels="True"/>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource AuthGradient}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource AuthGradientPressed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="DeleteButton" BasedOn="{StaticResource NextButton}">
        <Setter Property="Background" Value="{StaticResource RedNone}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource RedFocus}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource RedPressed}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ResetButton" BasedOn="{StaticResource NextButton}">
        <Setter Property="Background" Value="{StaticResource AuthGradientNoneRed}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource RedFocus}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource RedPressed}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="EditButton" BasedOn="{StaticResource NextButton}">
        <Setter Property="Background" Value="{StaticResource GreenNone}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource GreenFocus}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource GreenPressed}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="WordButton" BasedOn="{StaticResource NextButton}">
        <Setter Property="Background" Value="{StaticResource AuthGradientNone}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource AuthGradient}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource AuthGradientPressed}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region Icons style -->
    <Style x:Key="CardIconStyle" TargetType="materialDesign:PackIcon">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
    </Style>
    <!--#endregion-->
    
    <!--#region Radio button -->
    <Style x:Key="RadioButtonDesign" TargetType="{x:Type RadioButton}">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Padding" Value="20 0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource AuthGradientNone}"/>
        <Setter Property="Effect" Value="{StaticResource dropShadowFront}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border 
                        Name="radioButtonBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="True"
                        CornerRadius="25">

                        <Grid>
                            <Border x:Name="optionMark" MinWidth="6" MinHeight="6" Opacity="0"/>
                            <ContentPresenter 
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                TextBlock.FontSize="18"
                                TextBlock.FontFamily="Arial Rounded MT Bold"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!-- Триггер для выбора -->
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource AuthGradient}"/>
                            <!-- Цвет при выборе -->
                        </Trigger>

                        <!-- Триггер для невыбранного состояния -->
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="Gray"/>
                            <!-- Серый цвет при невыборе -->
                        </Trigger>

                        <!-- MultiTrigger для MouseOver только при нажатии -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource AuthGradientPressed}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
</ResourceDictionary>