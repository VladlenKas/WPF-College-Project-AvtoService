<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <!--#region Gradients -->
    <!-- For button when not hovered or pressed -->
    <LinearGradientBrush EndPoint="0,0" StartPoint="1,0" x:Key="AuthGradientNone">
        <GradientStop Color="#457f8c" Offset="0.0"/>
        <GradientStop Color="#7ab4c2" Offset="1.5"/>
    </LinearGradientBrush>

    <!-- For button when hovered -->
    <LinearGradientBrush EndPoint="0.0 0"    StartPoint="1.1 1" x:Key="AuthGradient">
        <GradientStop Color="#175764"/>
        <GradientStop Color="#619aa8" Offset="1.5"/>
    </LinearGradientBrush>

    <!-- For button when pressed -->
    <LinearGradientBrush EndPoint="0.0 0" StartPoint="1.1 1" x:Key="AuthGradientPressed">
        <GradientStop Color="#003d4a" Offset="0.0"/>
        <GradientStop Color="#588896" Offset="1.5"/>
    </LinearGradientBrush>

    <!-- For button when not hovered or pressed -->
    <LinearGradientBrush EndPoint="0.0 0" StartPoint="1.1 1" x:Key="AuthGradientNoneRed">
        <GradientStop Color="#FF989595" Offset="0"/>
    </LinearGradientBrush>

    <!-- For button when hovered -->
    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" x:Key="AuthGradientRed">
        <GradientStop Color="#FF6F6D6D" Offset="0"/>
    </LinearGradientBrush>

    <!-- For button when pressed -->
    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" x:Key="AuthGradientPressedRed">
        <GradientStop Color="#FF5A5858" Offset="0"/>
    </LinearGradientBrush>
    <!--#endregion-->

    <!-- Shadow Effect -->
    <DropShadowEffect x:Key="dropShadow" 
                      ShadowDepth="2" 
                      BlurRadius="4" 
                      Color="#000000" 
                      Opacity="0.2"/>

    <!-- Shadow for base grid with textboxes -->
    <DropShadowEffect x:Key="dropShadowFront" 
                      ShadowDepth="10" 
                      BlurRadius="20" 
                      Color="#000000" 
                      Opacity="0.1"/>

    <!-- TextBlock -->
    <Style TargetType="{x:Type TextBlock}" x:Key="AuthTextBlock">
        <Setter Property="FontFamily" Value="Arial Rounded MT Bold"/>
    </Style>
    
    <!--#region TextBoxes -->
    <!-- TextBox -->
    <Style TargetType="{x:Type TextBox}" x:Key="AuthTextBox">
        <Setter Property="Height" Value="40"/>
        <Setter Property="MaxLength" Value="45"/>
        <Setter Property="Padding" Value="10 0"/>
        <Setter Property="BorderBrush" Value="#80000000"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Arial Rounded MT Bold"/>
        <Setter Property="Effect" Value="{StaticResource dropShadow}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}"> 
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True"
                            CornerRadius="20"
                            Cursor="{TemplateBinding Cursor}">

                        <Grid IsHitTestVisible="False"
                              Cursor="{TemplateBinding Cursor}">
                            <ScrollViewer x:Name="PART_ContentHost" 
                                          Focusable="False"/>
                            <TextBlock 
                                x:Name="textBlock"
                                Effect="{x:Null}"
                                Margin="15 0 0 0"
                                Style="{StaticResource AuthTextBlock}"
                                Foreground="{TemplateBinding BorderBrush}"
                                IsHitTestVisible="False"
                                Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                Visibility="Collapsed"
                                VerticalAlignment="Center"
                                Opacity="0.5"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="textBlock" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="#000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- PasswordBox -->
    <Style TargetType="{x:Type PasswordBox}" x:Key="AuthPassBox">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Padding" Value="10 0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Effect" Value="{StaticResource dropShadow}"/>
        <Setter Property="BorderBrush" Value="#80000000"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Arial Rounded MT Bold"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True"
                            CornerRadius="20"
                            Cursor="{TemplateBinding Cursor}">

                        <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="False"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="#000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <!--#region ChechBox -->
    <Style TargetType="{x:Type CheckBox}" x:Key="AuthCheckBox">
        <Setter Property="BorderBrush" Value="#80000000"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Effect" Value="{StaticResource dropShadow}"/>
        <Setter Property="Foreground" Value="#80000000"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal">

                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                            <Grid>
                                <!-- Corner border -->
                                <Rectangle Margin="10"/>

                                <!-- Mark -->
                                <Path x:Name="CheckMark" 
                                      Data="M 0.5 -1 L 5 3 L 12 -6.5" 
                                      StrokeThickness="2.6"
                                      Visibility="Collapsed"
                                      StrokeLineJoin="Round"
                                      StrokeEndLineCap="Round"
                                      StrokeStartLineCap="Round">
                                    <Path.Stroke>
                                        <LinearGradientBrush StartPoint="0,1" EndPoint="1,1">
                                            <GradientStop Color="#FF7CFF00" Offset="0.0"/>
                                            <GradientStop Color="#FF437708" Offset="1.0"/>
                                        </LinearGradientBrush>
                                    </Path.Stroke>
                                    <!-- Position for mark -->
                                    <Path.RenderTransform>
                                        <TranslateTransform X="4" Y="12"/>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Border>

                        <TextBlock Margin="5 0 0 0"
                                   Text="{TemplateBinding Content}"
                                   FontFamily="Arial Rounded MT Bold"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   x:Name="TextBlockCustom"/>
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#000000"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="#000000"/>
                            <Setter Property="BorderBrush" Value="#000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <!--#region Button -->
    <Style TargetType="{x:Type Button}" x:Key="AuthButton">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Padding" Value="20 0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource AuthGradientNone}"/>
        <Setter Property="Effect" Value="{StaticResource dropShadowFront}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        Effect="{TemplateBinding Effect}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="True"
                        CornerRadius="25">

                        <ContentPresenter 
                            Effect="{x:Null}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            TextBlock.FontSize="18"
                            TextBlock.FontFamily="Arial Rounded MT Bold"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource AuthGradient}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource AuthGradientPressed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="AuythButtonExit"
           BasedOn="{StaticResource AuthButton}">
        <Setter Property="Background" Value="{StaticResource AuthGradientNoneRed}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource AuthGradientRed}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource AuthGradientPressedRed}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->
</ResourceDictionary>